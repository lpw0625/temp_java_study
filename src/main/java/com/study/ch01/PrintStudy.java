package com.study.ch01;

public class PrintStudy {

    // 클래스 명이 똑같아야 한다. 틀리면 실행이 안됨.
    // 클래스 에선 파스칼 표기법 쓴다. 단어의 첫글자에는 대문자로 시작됨.
    // 첫글자가 소문자로 가다가 대문자로 끝나는 것은 카멜 표기법.

    public static void main(String[] args) { // 메인문(main)

        // 자바는 무조건 main에서 시작하므로 main은 자바의 시작점이다.
        // TAP을 들여쓰기를 잘해야 가독성이 좋아진다. 만약에 습관 잘못들이면 실무에서 욕 먹는다.

        // {(세미클론) : 명령어의 끝.


        System.out.println("\u0061"); // 유니코드 출력 방법.
        System.out.println("" + '이' + '평' + '원'); //문자열이 최우선시이므로 문자열로 처리를 하기 때문에 ''에 있는 문자도 문자열로 처리를 한다.
        System.out.println("나이: " + (10 + 20)); // 마찬가지로 문자열로 처리가 되어 1020으로 출력이 된다.
                                                // 괄호를 우선시 하므로 괄호를 넣어야 숫자가 연산처리가 되어 30으로 출력이 된다.
        // 명령 안에서 연산이 실행이 될건지 아니면 글자로 보는 것인지의 차이는
        // ""의 유무 차이이다.
        // 숫자는 ""있으나 없으나 출력이 가능하지만
        // 문자는 ""없으면 에러가 뜬다.
        // ''은 한글자만 출력이 가능하지만 그 이상부터는 ""로 해야한다.
        // 이것의 차이는 자료형이다.
        // char자료형 : 2바이트의 크기를 가진다.
        // 0000 0000 : 8bit(1byte)
        // 0000 0000 0000 0000 : 2byte
        // 1byte는 :  0~255까지의 경우의 수를 가진다.(총 256개) // 1byte 표현할 수 있는 양의 정수는 0~255까지
        // 10000000 : 부호 비트. 앞에 1이 되는 순간 -(음수)가 된다.
        // 왜 자바는 2바이트만 쓰는가?
        // 정수는 0~9 총 10개
        /*
        진수
        0000 0001
        10진수는 10이 되는 순간부터 알파벳으로 표현이된다.
        유니코드를 16진수로 하는 이유는 많은 경우의 수를 방지하기 위함.
        가 : 0000 ac00
        0000 0000 0000 0000 : 2byte
        +라는 연산자는 숫자를 더하거나 문자열을 이어주는 역할을 한다.
        프로그램은 숫자보다 문자열이 가장 높다.
        문자열 부터 처리를 한다.
         */




    }


}

